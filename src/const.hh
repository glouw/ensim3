#pragma once

namespace sim
{
    constexpr std::string title = "ensim3";
    constexpr int cycles_per_frame = 1024;
    constexpr int impulse_size = 8192;
    constexpr int render_demo_delay_per_edge_ms = 32;
    constexpr double sample_frequency_hz = 44100.0;
    constexpr double dt_s = 1.0 / sample_frequency_hz;
    constexpr int node_bfs_visited_capacity = 32;
}

namespace dynamics
{
    constexpr double four_stroke_r = 4.0 * M_PI;
}

namespace thermofluidics
{
    /* todo: one day add different types that will change these marked values */
    constexpr double air_fuel_stoich_ratio = 14.7; /* fuel */
    constexpr double fuel_lower_heating_value_j_per_kg = 44e6; /* fuel */
    constexpr double autoignition_constant_a = 1200.0; /* fuel */
    constexpr double autoignition_constant_b = 0.5; /* fuel */
    constexpr double ntp_static_pressure_pa = 101325.0;
    constexpr double ntp_static_temperature_k = 293.15;
    constexpr double stp_static_temperature_k = 273.15;
    constexpr double molar_mass_combusted_kg_per_mol = 0.02885;
    constexpr double molar_mass_air_kg_per_mol = 0.0289647;
    constexpr double molar_mass_fuel_kg_per_mol = 0.11423; /* fuel */
    constexpr double gamma_fuel = 1.15; /* fuel */
    constexpr double gamma_combusted = 1.3; /* fuel */
    constexpr double gamma_air = 1.4;
    constexpr double r_j_per_mol_k = 8.314;
}

namespace ui
{
    constexpr std::string volume_key = "volume_name";
    constexpr double line_spacing = 1.1;
    constexpr int piston_scale = 1024;
    constexpr int throttle_scale = 2048;
    constexpr int info_render_ticks = 10;
    constexpr int grid_size_p = 48;
    constexpr int font_size_p = 8;
    constexpr int title_font_multiplier = 2;
    constexpr int help_font_multiplier = 2;
    constexpr int font_multiplier = 2;
    constexpr int node_font_multiplier = 1;
    constexpr int graph_title_font_multiplier = 1;
    constexpr int execution_dt_moving_average_samples = 30;
    constexpr int prop_table_double_precision = 8;
    constexpr uint8_t font[128][font_size_p] = {
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, /* ( ) */
        {0x18, 0x3C, 0x3C, 0x18, 0x18, 0x00, 0x18, 0x00}, /* (!) */
        {0x36, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, /* (") */
        {0x36, 0x36, 0x7F, 0x36, 0x7F, 0x36, 0x36, 0x00}, /* (#) */
        {0x0C, 0x3E, 0x03, 0x1E, 0x30, 0x1F, 0x0C, 0x00}, /* ($) */
        {0x00, 0x63, 0x33, 0x18, 0x0C, 0x66, 0x63, 0x00}, /* (%) */
        {0x1C, 0x36, 0x1C, 0x6E, 0x3B, 0x33, 0x6E, 0x00}, /* (&) */
        {0x06, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00}, /* (') */
        {0x18, 0x0C, 0x06, 0x06, 0x06, 0x0C, 0x18, 0x00}, /* (() */
        {0x06, 0x0C, 0x18, 0x18, 0x18, 0x0C, 0x06, 0x00}, /* ()) */
        {0x00, 0x66, 0x3C, 0xFF, 0x3C, 0x66, 0x00, 0x00}, /* (*) */
        {0x00, 0x0C, 0x0C, 0x3F, 0x0C, 0x0C, 0x00, 0x00}, /* (+) */
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x0C, 0x06}, /* (,) */
        {0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00}, /* (-) */
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x0C, 0x00}, /* (.) */
        {0x60, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x00}, /* (/) */
        {0x3E, 0x63, 0x73, 0x7B, 0x6F, 0x67, 0x3E, 0x00}, /* (0) */
        {0x0C, 0x0E, 0x0C, 0x0C, 0x0C, 0x0C, 0x3F, 0x00}, /* (1) */
        {0x1E, 0x33, 0x30, 0x1C, 0x06, 0x33, 0x3F, 0x00}, /* (2) */
        {0x1E, 0x33, 0x30, 0x1C, 0x30, 0x33, 0x1E, 0x00}, /* (3) */
        {0x38, 0x3C, 0x36, 0x33, 0x7F, 0x30, 0x78, 0x00}, /* (4) */
        {0x3F, 0x03, 0x1F, 0x30, 0x30, 0x33, 0x1E, 0x00}, /* (5) */
        {0x1C, 0x06, 0x03, 0x1F, 0x33, 0x33, 0x1E, 0x00}, /* (6) */
        {0x3F, 0x33, 0x30, 0x18, 0x0C, 0x0C, 0x0C, 0x00}, /* (7) */
        {0x1E, 0x33, 0x33, 0x1E, 0x33, 0x33, 0x1E, 0x00}, /* (8) */
        {0x1E, 0x33, 0x33, 0x3E, 0x30, 0x18, 0x0E, 0x00}, /* (9) */
        {0x00, 0x0C, 0x0C, 0x00, 0x00, 0x0C, 0x0C, 0x00}, /* (:) */
        {0x00, 0x0C, 0x0C, 0x00, 0x00, 0x0C, 0x0C, 0x06}, /* (;) */
        {0x18, 0x0C, 0x06, 0x03, 0x06, 0x0C, 0x18, 0x00}, /* (<) */
        {0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00}, /* (=) */
        {0x06, 0x0C, 0x18, 0x30, 0x18, 0x0C, 0x06, 0x00}, /* (>) */
        {0x1E, 0x33, 0x30, 0x18, 0x0C, 0x00, 0x0C, 0x00}, /* (?) */
        {0x3E, 0x63, 0x7B, 0x7B, 0x7B, 0x03, 0x1E, 0x00}, /* (@) */
        {0x0C, 0x1E, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x00}, /* (A) */
        {0x3F, 0x66, 0x66, 0x3E, 0x66, 0x66, 0x3F, 0x00}, /* (B) */
        {0x3C, 0x66, 0x03, 0x03, 0x03, 0x66, 0x3C, 0x00}, /* (C) */
        {0x1F, 0x36, 0x66, 0x66, 0x66, 0x36, 0x1F, 0x00}, /* (D) */
        {0x7F, 0x46, 0x16, 0x1E, 0x16, 0x46, 0x7F, 0x00}, /* (E) */
        {0x7F, 0x46, 0x16, 0x1E, 0x16, 0x06, 0x0F, 0x00}, /* (F) */
        {0x3C, 0x66, 0x03, 0x03, 0x73, 0x66, 0x7C, 0x00}, /* (G) */
        {0x33, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x33, 0x00}, /* (H) */
        {0x1E, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x1E, 0x00}, /* (I) */
        {0x78, 0x30, 0x30, 0x30, 0x33, 0x33, 0x1E, 0x00}, /* (J) */
        {0x67, 0x66, 0x36, 0x1E, 0x36, 0x66, 0x67, 0x00}, /* (K) */
        {0x0F, 0x06, 0x06, 0x06, 0x46, 0x66, 0x7F, 0x00}, /* (L) */
        {0x63, 0x77, 0x7F, 0x7F, 0x6B, 0x63, 0x63, 0x00}, /* (M) */
        {0x63, 0x67, 0x6F, 0x7B, 0x73, 0x63, 0x63, 0x00}, /* (N) */
        {0x1C, 0x36, 0x63, 0x63, 0x63, 0x36, 0x1C, 0x00}, /* (O) */
        {0x3F, 0x66, 0x66, 0x3E, 0x06, 0x06, 0x0F, 0x00}, /* (P) */
        {0x1E, 0x33, 0x33, 0x33, 0x3B, 0x1E, 0x38, 0x00}, /* (Q) */
        {0x3F, 0x66, 0x66, 0x3E, 0x36, 0x66, 0x67, 0x00}, /* (R) */
        {0x1E, 0x33, 0x07, 0x0E, 0x38, 0x33, 0x1E, 0x00}, /* (S) */
        {0x3F, 0x2D, 0x0C, 0x0C, 0x0C, 0x0C, 0x1E, 0x00}, /* (T) */
        {0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x3F, 0x00}, /* (U) */
        {0x33, 0x33, 0x33, 0x33, 0x33, 0x1E, 0x0C, 0x00}, /* (V) */
        {0x63, 0x63, 0x63, 0x6B, 0x7F, 0x77, 0x63, 0x00}, /* (W) */
        {0x63, 0x63, 0x36, 0x1C, 0x1C, 0x36, 0x63, 0x00}, /* (X) */
        {0x33, 0x33, 0x33, 0x1E, 0x0C, 0x0C, 0x1E, 0x00}, /* (Y) */
        {0x7F, 0x63, 0x31, 0x18, 0x4C, 0x66, 0x7F, 0x00}, /* (Z) */
        {0x1E, 0x06, 0x06, 0x06, 0x06, 0x06, 0x1E, 0x00}, /* ([) */
        {0x03, 0x06, 0x0C, 0x18, 0x30, 0x60, 0x40, 0x00}, /* (\) */
        {0x1E, 0x18, 0x18, 0x18, 0x18, 0x18, 0x1E, 0x00}, /* (]) */
        {0x08, 0x1C, 0x36, 0x63, 0x00, 0x00, 0x00, 0x00}, /* (^) */
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF}, /* (_) */
        {0x0C, 0x0C, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00}, /* (`) */
        {0x00, 0x00, 0x1E, 0x30, 0x3E, 0x33, 0x6E, 0x00}, /* (a) */
        {0x07, 0x06, 0x06, 0x3E, 0x66, 0x66, 0x3B, 0x00}, /* (b) */
        {0x00, 0x00, 0x1E, 0x33, 0x03, 0x33, 0x1E, 0x00}, /* (c) */
        {0x38, 0x30, 0x30, 0x3E, 0x33, 0x33, 0x6E, 0x00}, /* (d) */
        {0x00, 0x00, 0x1E, 0x33, 0x3F, 0x03, 0x1E, 0x00}, /* (e) */
        {0x1C, 0x36, 0x06, 0x0F, 0x06, 0x06, 0x0F, 0x00}, /* (f) */
        {0x00, 0x00, 0x6E, 0x33, 0x33, 0x3E, 0x30, 0x1F}, /* (g) */
        {0x07, 0x06, 0x36, 0x6E, 0x66, 0x66, 0x67, 0x00}, /* (h) */
        {0x0C, 0x00, 0x0E, 0x0C, 0x0C, 0x0C, 0x1E, 0x00}, /* (i) */
        {0x30, 0x00, 0x30, 0x30, 0x30, 0x33, 0x33, 0x1E}, /* (j) */
        {0x07, 0x06, 0x66, 0x36, 0x1E, 0x36, 0x67, 0x00}, /* (k) */
        {0x0E, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x1E, 0x00}, /* (l) */
        {0x00, 0x00, 0x33, 0x7F, 0x7F, 0x6B, 0x63, 0x00}, /* (m) */
        {0x00, 0x00, 0x1F, 0x33, 0x33, 0x33, 0x33, 0x00}, /* (n) */
        {0x00, 0x00, 0x1E, 0x33, 0x33, 0x33, 0x1E, 0x00}, /* (o) */
        {0x00, 0x00, 0x3B, 0x66, 0x66, 0x3E, 0x06, 0x0F}, /* (p) */
        {0x00, 0x00, 0x6E, 0x33, 0x33, 0x3E, 0x30, 0x78}, /* (q) */
        {0x00, 0x00, 0x3B, 0x6E, 0x66, 0x06, 0x0F, 0x00}, /* (r) */
        {0x00, 0x00, 0x3E, 0x03, 0x1E, 0x30, 0x1F, 0x00}, /* (s) */
        {0x08, 0x0C, 0x3E, 0x0C, 0x0C, 0x2C, 0x18, 0x00}, /* (t) */
        {0x00, 0x00, 0x33, 0x33, 0x33, 0x33, 0x6E, 0x00}, /* (u) */
        {0x00, 0x00, 0x33, 0x33, 0x33, 0x1E, 0x0C, 0x00}, /* (v) */
        {0x00, 0x00, 0x63, 0x6B, 0x7F, 0x7F, 0x36, 0x00}, /* (w) */
        {0x00, 0x00, 0x63, 0x36, 0x1C, 0x36, 0x63, 0x00}, /* (x) */
        {0x00, 0x00, 0x33, 0x33, 0x33, 0x3E, 0x30, 0x1F}, /* (y) */
        {0x00, 0x00, 0x3F, 0x19, 0x0C, 0x26, 0x3F, 0x00}, /* (z) */
        {0x38, 0x0C, 0x0C, 0x07, 0x0C, 0x0C, 0x38, 0x00}, /* ({) */
        {0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x18, 0x00}, /* (|) */
        {0x07, 0x0C, 0x0C, 0x38, 0x0C, 0x0C, 0x07, 0x00}, /* (}) */
        {0x6E, 0x3B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, /* (~) */
    };
}
